buildscript {
    repositories {
        jcenter()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath 'kr.entree:spigradle:1.2.2'
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.2.0'
    }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'kr.entree.spigradle'
apply plugin: "com.github.johnrengelman.shadow"

group = "io.github.plugintemplate"
version = "1.0"

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
    spigot()
    jitpack()
    codemc()
    maven {
        url = "https://repo.aikar.co/content/groups/aikar/"
    }
    maven {
        url = "https://dl.bintray.com/portlek/maven"
    }
    maven {
        url = "http://repo.extendedclip.com/content/repositories/placeholderapi/"
    }
    maven {
        url = "http://pex-repo.aoeu.xyz"
    }
}

dependencies {
    // Tools
    implementation("co.aikar:acf-bukkit:0.5.0-SNAPSHOT")
    implementation("io.github.portlek:database:1.0")
    implementation("io.github.portlek:configs-bukkit:1.0")
    implementation("com.github.cryptomorin:XSeries:5.3.1")

    // Inventory Library from local maven repository(for now)
    // Visit https://github.com/MinusKube/SmartInvs/tree/1.3.0
    // Clone it and run `gradlew clean build` command without
    // `signing` and `uploadArchives` tasks on the build.gradle
    // If 1.3.0 was released you don't have to do that.
    implementation("fr.minuskube.inv:smart-invs:1.3.0")

    // Other Stuffs
    compileOnly("org.jetbrains:annotations:19.0.0")

    // Main
    compileOnly bukkit()

    // Hooks
    compileOnly("me.clip:placeholderapi:2.10.4")
    compileOnly("org.anjocaido:groupmanagerx:2.2-SNAPSHOT")
    compileOnly("ru.tehkode:PermissionsEx:1.23.5-SNAPSHOT")
    compileOnly vault()
    compileOnly luckPerms()
}

shadowJar {
    relocate('co.aikar.commands', this.group + ".bukkitjavagradle.commands")
    relocate('io.github.portlek.configs', this.group + ".bukkitjavagradle.file")
    minimize()
    setArchivesBaseName(this.name)
    archiveClassifier.set("")
    archiveVersion.set("")
}

spigot {
    description = "Plugin Template for Bukkit on Java with Gradle."
    apiVersion = "1.13"
    authors = ["portlek"]
    softDepends = ["Vault", "GroupManager", "LuckPerms", "PermissionsEx", "PlaceholderAPI"]
    permissions {

    }
    /**
     * @Permissions ( {
     * @Permission(
     *name = "exampleplugin.*" ,
     *desc = "Allowsyoutoaccesstotheallplugin." ,
     *defaultValue =PermissionDefault.OP,
     *children = {* @ChildPermission(name = "exampleplugin.version" ) ,
     * @ChildPermission (name = "exampleplugin.command.*" )
     *}*     ) ,
     * @Permission (
     *name = "exampleplugin.command.*" ,
     *desc = "Itallowsyoutousetoallcommandsoftheplugin." ,
     *defaultValue =PermissionDefault.OP,
     *children = {* @ChildPermission (name = "exampleplugin.command.main" ) ,
     * @ChildPermission (name = "exampleplugin.command.help" ) ,
     * @ChildPermis sion(name = "exampleplugin.command.reload" ) ,
     * @ChildPerm ission(name = "exampleplugin.command.version" )
     *}*     ),
     * @Permission (
     *name = "exampleplugin.version" ,
     *desc = "Itallowsyoutonotifyifthereisnewupdarthepluginonjoin." ,
     *defaultValue =PermissionDefault.OP
     * ) ,
     * @Permission (
     *name = "exampleplugin.command.main" ,
     *desc = "Itallowsyoutousetompleplugincommand." ,
     *defaultValue =PermissionDefault.TRUE
     * ) ,
     * @Permission (
     *name = "exampleplugin.command.help" ,
     *desc = "Itallowsyoutouseto /exaluginhelpcommand." ,
     *defaultValue =PermissionDefault.TRUE
     * ) ,
     * @Permission (
     *name = "exampleplugin.command.reload" ,
     *desc = "Itallowsyoutouseto /exaluginreloadcommand." ,
     *defaultValue =PermissionDefault.OP
     * ) ,
     * @Permission (
     *name = "exampleplugin.command.version" ,
     *desc = "Itallowsyoutouseto /exaplepluginversioncommand." ,
     *defaultValue =PermissionDefault.OP
     * )
     *})
     */
}
